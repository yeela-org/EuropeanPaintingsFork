automations:
  {% for item in deprecated %}
  catch_deprecated_components_{{ loop.index }}:
    if:
      - {{ source.diff.files | matchDiffLines(regex=item.regex) | some }}
    run:
      - action: add-label@v1
        args:
          label: 'deprecated-component-in-use'
          color: '#FF0000'
      - action: request-changes@v1
        args:
          comment: |
            `{{ item.old }}` component is deprecated, use `{{ item.new }}` instead
  {% endfor %}
  mark_color_pr:
    if:
      - {{ files | length == 2 }}
    run:
      - action: add-label@v1
        args:
          label: 'small pr'
          color: '#33B5FF'
  is_first_commit:
    if: 
      - {{ repo.contributors | isFirstCommit(branch.author) }}
    run: 
      - action: add-comment@v1
        args:
          comment: Welcome!
  rank_by_git_blame:
    if:
      - {{ repo | rankByGitBlame(gt=10) }}
    run:
      - action: add-reviewers@v1
        args:
          reviewers: [{{ repo | rankByGitBlame(gt=10) }}]
      - action: add-comment@v1
        args:
          comment: |
            owners: {{ repo | rankByGitBlame(gt=10) | dump | safe }}


 
deprecated:
  - regex: '^[+].*import.*Flex.*from.*_/layout'
    old: Flex
    new: string
  - regex: r/^[+].*import.*Flex.*from.*_\/layout/
    old: Flex
    new: regex