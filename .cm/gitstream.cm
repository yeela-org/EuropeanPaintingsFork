automations:
  {% for item in deprecated %}
  catch_deprecated_components_{{ loop.index }}:
    if:
      - {{ source.diff.files | matchDiffLines(regex=item.regex) | some }}
    run:
      - action: add-label@v1
        args:
          label: 'deprecated-component-in-use'
          color: '#FF0000'
      - action: request-changes@v1
        args:
          comment: |
            `{{ item.old }}` component is deprecated, use `{{ item.new }}` instead
  {% endfor %}
  no_tests:
    if:
      - {{ files | match(regex=r/(test|spec)/) | nope }}
    run: 
      - action: add-label@v1
        args:
          label: 'missing-tests'
          color: '#E94637'
  small_change:
    if:
      - {{ files | length < 2 }}
    run: 
      - action: approve@v1
  large_chage:
    if:
      - {{ files | length > 2 }}
    run:
      - action: add-label@v1
        args:
          label: 'missing-tests'
          color: '#E94637'
      - action: set-required-approvals@v1
        args:
          approvals: 2

  
  
deprecated:
  - regex: '^[+].*import.*Flex.*from.*_/layout'
    old: Flex
    new: string
  - regex: r/^[+].*import.*Flex.*from.*_\/layout/
    old: Flex
    new: regex